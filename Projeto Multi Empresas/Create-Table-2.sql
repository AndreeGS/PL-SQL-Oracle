--TABELA ESTOQUE
CREATE TABLE ESTOQUE
(
    COD_EMPRESA INT NOT NULL,
    COD_MAT INT NOT NULL,
	QTD_SALDO DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_EST1 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT),
    CONSTRAINT PK_ESTOQUE1 PRIMARY KEY (COD_EMPRESA,COD_MAT)
);


--TABELA ESTOQUE LOTE
CREATE TABLE ESTOQUE_LOTE
(
    COD_EMPRESA INT NOT NULL,
	COD_MAT INT NOT NULL,
	LOTE VARCHAR2(20) NOT NULL,
	QTD_LOTE DECIMAL(10,2) NOT NULL,
	CONSTRAINT PK_ESTL1 PRIMARY KEY (COD_EMPRESA,COD_MAT,LOTE), --PK COMPOSTA
	CONSTRAINT FK_ESTL1 FOREIGN KEY (COD_EMPRESA,COD_MAT) 
	REFERENCES MATERIAL(COD_EMPRESA,COD_MAT)
);


--ESTOQUE DO MOVIMENTO
CREATE TABLE ESTOQUE_MOV
(
	ID_MOV INT  NOT NULL PRIMARY KEY,
    COD_EMPRESA INT NOT NULL,
	TIP_MOV VARCHAR2(1),CONSTRAINT CK_MOV CHECK (TIP_MOV in ('S','E')), --S=SAIDA ,E=ENTRADA
	COD_MAT INT NOT NULL,
	LOTE  VARCHAR2(20) NOT NULL,
	QTD DECIMAL(10,2) NOT NULL,
	DATA_MOV DATE NOT NULL,
	DATA_HORA DATE NOT NULL,
	CONSTRAINT FK_ESTM1 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT)
	--CAMPO LOGIN TABELA ESTOQUE_MOV CRIACAO APOS TABELA USUARIO
);

-- CRIANDO SEQUENCIA PARA TABELA ESTOQUE_MOV
CREATE SEQUENCE SEQ_MOVEST START WITH 1 INCREMENT BY 1 NOMAXVALUE;


--TABELA PEDIDOS DE COMPRAS
CREATE TABLE PED_COMPRAS
(
    COD_EMPRESA INT NOT NULL,
	NUM_PEDIDO INT  NOT NULL,
	ID_FOR INT NOT NULL,
	COD_PAGTO INT NOT NULL, --ALTERAR  COD_PAGTO TAB PED_COMPRAS PARA FOREIGN KEY APOS TABELA COND_PAGTO  	
	DATA_PEDIDO DATE NOT NULL,
	DATA_ENTREGA DATE NOT NULL,
	SITUACAO NCHAR(1) NOT NULL, --A-ABERTO P-PLANEJADO -F FINALIZADO
	TOTAL_PED DECIMAL(10,2),
	CONSTRAINT FK_PEDC1 FOREIGN KEY (ID_FOR) REFERENCES FORNECEDORES(ID_FOR),
    CONSTRAINT PK_PEDC1 PRIMARY KEY (COD_EMPRESA,NUM_PEDIDO)
);

--TABELA DE PARAMETROS DE PEDIDOS DE COMPRAS
 CREATE TABLE PARAM_PED_COMPRAS
 (
     COD_EMPRESA INT NOT NULL PRIMARY KEY,
     NUM_PED INT NOT NULL,
     CONSTRAINT FK_PPC FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA)
 );


--TABELA DE PEDIDO DE COMPRAS 
CREATE TABLE PED_COMPRAS_ITENS
(
    COD_EMPRESA INT NOT NULL,
	NUM_PEDIDO INT NOT NULL,
	SEQ_MAT INT NOT NULL,
	COD_MAT INT NOT NULL,
	QTD     INT NOT NULL,
	VAL_UNIT DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_PEDIT1 FOREIGN KEY (COD_EMPRESA,NUM_PEDIDO) REFERENCES PED_COMPRAS(COD_EMPRESA,NUM_PEDIDO),
	CONSTRAINT FK_PEDIT2 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT),
    CONSTRAINT PK_PED_C_IT PRIMARY KEY (COD_EMPRESA,NUM_PEDIDO,SEQ_MAT)
);


--RH
-- TABELA DE CENTRO DE CUSTO
CREATE TABLE CENTRO_CUSTO
(
    COD_EMPRESA INT NOT NULL,
	COD_CC VARCHAR2(4) NOT NULL,
	NOME_CC VARCHAR2(20) NOT NULL,
    CONSTRAINT FK_CC1  FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA),
    CONSTRAINT PK_CC1 PRIMARY KEY (COD_EMPRESA,COD_CC)
);

--TABELA DE CARGOS
CREATE TABLE CARGOS 
(
    COD_EMPRESA INT NOT NULL,
     COD_CARGO INT  NOT NULL,
	 NOME_CARGO VARCHAR2(50),
     CONSTRAINT FK_CARG1  FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA),
     CONSTRAINT PK_CARG1 PRIMARY KEY (COD_EMPRESA,COD_CARGO)
);


--TABELA FUNCIONÁRIO
CREATE TABLE FUNCIONARIO 
(
    COD_EMPRESA INT NOT NULL,
	MATRICULA INT NOT NULL ,
	COD_CC VARCHAR2(4) NOT NULL,
	NOME   VARCHAR2(50) NOT NULL,
	RG     VARCHAR2(15) NOT NULL,
	CPF    VARCHAR2(15) NOT NULL,
	ENDERECO  VARCHAR2(50)NOT NULL,
	NUMERO VARCHAR2(10) NOT NULL,
	BAIRRO VARCHAR2(50) NOT NULL,
	COD_CIDADE VARCHAR2(7) NOT NULL,
	DATA_ADMISS DATE NOT NULL,
	DATE_DEMISS DATE,
	DATA_NASC DATE NOT NULL,
	TELEFONE VARCHAR2(15) NOT NULL,
	COD_CARGO INT NOT NULL,
	CONSTRAINT FK_FUNC1 FOREIGN KEY (COD_EMPRESA,COD_CC) REFERENCES CENTRO_CUSTO(COD_EMPRESA,COD_CC),
	CONSTRAINT FK_FUNC2 FOREIGN KEY (COD_CIDADE) REFERENCES CIDADES(COD_CIDADE),
	CONSTRAINT FK_FUNC3 FOREIGN KEY (COD_EMPRESA,COD_CARGO) REFERENCES CARGOS(COD_EMPRESA,COD_CARGO),
    CONSTRAINT PK_FUNC1 PRIMARY KEY(COD_EMPRESA,MATRICULA)
 );


--TABELA DE PARAMETROS DE MATRICULA POR EMPRESA
CREATE TABLE PARAM_MATRICULA
(
   COD_EMPRESA INT NOT NULL PRIMARY KEY,
   MATRICULA INT NOT NULL,
   CONSTRAINT FK_PMAT1 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA)
);


--TABELA SALÁRIO
CREATE TABLE SALARIO
(
    COD_EMPRESA INT NOT NULL,
	MATRICULA INT NOT NULL,
	SALARIO DECIMAL(10,2)NOT NULL,
	CONSTRAINT FK_SAL1 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA),
    CONSTRAINT PK_SAL1 PRIMARY KEY (COD_EMPRESA,MATRICULA) 
);

--TABELA FOLHA DE PAGAMENTO
CREATE TABLE FOLHA_PAGTO
(
    COD_EMPRESA INT NOT NULL,
	MATRICULA INT NOT NULL,
	TIPO_PGTO CHAR(1) NOT NULL,-- (M-FOLHA,A-ADTO,F-FERIAS,D-13 ,R-RESC),
	TIPO CHAR(1)  NOT NULL,--P=PROVENTOS D-DESCONTO
	EVENTO VARCHAR2(30) NOT NULL, 
	MES_REF VARCHAR2(2)NOT NULL,
	ANO_REF VARCHAR2(4)NOT NULL,
	DATA_PAGTO DATE NOT NULL,
	VALOR DECIMAL(10,2) NOT NULL,
    CONSTRAINT FK_FP1 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA)
);

-- CRIANDO INDEX PARA OTIMARIZAR CONSULTAS
CREATE INDEX IX1_FPAG ON FOLHA_PAGTO(COD_EMPRESA,MES_REF,ANO_REF);


--TABELA USUARIOS
CREATE TABLE USUARIOS
(
    COD_EMPRESA INT NOT NULL,
	LOGIN VARCHAR2(30) NOT NULL ,
	MATRICULA INT NOT NULL,
	SENHA   VARCHAR2(32) NOT NULL,
	SITUACAO CHAR(1) NOT NULL, --A=ATIVO -B BLOQUEADO
	CONSTRAINT FK_US1 FOREIGN KEY (COD_EMPRESA,MATRICULA) 
	REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA),
    CONSTRAINT PK_USER PRIMARY KEY(COD_EMPRESA,MATRICULA)
);

-- CRIANDO INDEX UNIQUE PARA LOGIN
CREATE UNIQUE INDEX IX1_USER ON USUARIOS (LOGIN);


--FINANCEIRO
-- TABELA CONTAS A RECEBER
CREATE TABLE CONTAS_RECEBER
(
    COD_EMPRESA INT NOT NULL,
	ID_DOC INT  NOT NULL PRIMARY KEY,
    ID_CLIENTE INT NOT NULL,
	ID_DOC_ORIG INT NOT NULL, --ALTER CAMPO ID_DOC_ORIG PARA FK TABELA NOTA_FISCAL
	PARC INT NOT NULL,
	DATA_VENC DATE NOT NULL,
	DATA_PAGTO DATE,
	VALOR DECIMAL(10,2),
	CONSTRAINT FK_CR1 FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE),
    CONSTRAINT FK_CR2 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA)
);

-- CRIANDO SEQUENCIA PARA TABELA CONTAS_RECEBER
CREATE SEQUENCE SEQ_CRE START WITH 1 INCREMENT BY 1 NOMAXVALUE;


--TABELA CONTAS A PAGAR
CREATE TABLE CONTAS_PAGAR
(
    COD_EMPRESA INT NOT NULL,
	ID_DOC INT  NOT NULL PRIMARY KEY,
    ID_FOR INT NOT NULL,
	ID_DOC_ORIG INT NOT NULL, --ALTER CAMPO ID_DOC_ORIG PARA FK TABELA NOTA_FISCAL
	PARC INT NOT NULL,
	DATA_VENC DATE NOT NULL,
	DATA_PAGTO DATE ,
	VALOR DECIMAL(10,2),
	CONSTRAINT FK_CP1 FOREIGN KEY (ID_FOR) REFERENCES FORNECEDORES(ID_FOR),
    CONSTRAINT FK_CP2 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA)
);

-- CRIANDO SEQUENCIA PARA TABELA CONTAS_PAGAR
CREATE SEQUENCE SEQ_CAP START WITH 1 INCREMENT BY 1 NOMAXVALUE;


--TABELA CONDIÇÃO DE PAGAMENTO
CREATE TABLE COND_PAGTO
(
	COD_PAGTO INT  NOT NULL PRIMARY KEY,
	NOME_CP VARCHAR2(50) NOT NULL 
);

-- CRIANDO SEQUENCIA PARA TABELA COND_PAGTO
CREATE SEQUENCE SEQ_PAGTO START WITH 1 INCREMENT BY 1 NOMAXVALUE;


--CONDIÇÃO DE PAGAMENTOS EM DATALHES
CREATE TABLE COND_PAGTO_DET
(
	COD_PAGTO INT NOT NULL,
	PARC     INT NOT NULL,
	DIAS     INT NOT NULL,
	PCT  DECIMAL(10,2)NOT NULL,--PERCENTUAL DA PARCELA
	CONSTRAINT FK_CONDP1 FOREIGN KEY (COD_PAGTO) 
	REFERENCES COND_PAGTO(COD_PAGTO)
);



--COMERCIAL
--TABELA PEDIDO DE VENDAS
CREATE TABLE PED_VENDAS
	(
    COD_EMPRESA INT NOT NULL,
	NUM_PEDIDO INT  NOT NULL,
	ID_CLIENTE INT NOT NULL,
	COD_PAGTO INT NOT NULL, 
	DATA_PEDIDO DATE NOT NULL,
	DATA_ENTREGA DATE NOT NULL,
	SITUACAO NCHAR(1) NOT NULL, --A-ABERTO P-PLANEJADO -F FINALIZADO
	TOTAL_PED DECIMAL(10,2),
	CONSTRAINT FK_PV1 FOREIGN KEY (ID_CLIENTE)REFERENCES CLIENTES(ID_CLIENTE),
	CONSTRAINT FK_PV2 FOREIGN KEY (COD_PAGTO) REFERENCES COND_PAGTO(COD_PAGTO),
    CONSTRAINT FK_PV3 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA),
    CONSTRAINT PK_PV1 PRIMARY KEY(COD_EMPRESA,NUM_PEDIDO)
	);


--PARAMETROS PARA O PEDIDO DE VENDAS
CREATE TABLE PARAM_PED_VENDAS
    (
     COD_EMPRESA INT NOT NULL PRIMARY KEY,
     NUM_PED INT NOT NULL,
     CONSTRAINT FK_PV FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA)
     );


--DETALHES DO PEDIDO DE VENDAS
CREATE TABLE PED_VENDAS_ITENS
	(
    COD_EMPRESA INT NOT NULL,
	NUM_PEDIDO INT NOT NULL,
	SEQ_MAT INT NOT NULL,
	COD_MAT INT NOT NULL,
	QTD     INT NOT NULL,
	VAL_UNIT DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_PVIT1 FOREIGN KEY (COD_EMPRESA,NUM_PEDIDO) REFERENCES PED_VENDAS(COD_EMPRESA,NUM_PEDIDO),
    CONSTRAINT FK_PVIT2 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT)
	);


--VENDEDORES
CREATE TABLE VENDEDORES
    (
     COD_EMPRESA INT NOT NULL,
     ID_VEND INT NOT NULL,
	 MATRICULA INT NOT NULL,
 	 CONSTRAINT FK_VEND1 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA),
     CONSTRAINT PK_VEND1 PRIMARY KEY (COD_EMPRESA,MATRICULA)
	 );

    
-- CRIANDO SEQUENCIA PARA COD DO VENDEDOR
CREATE SEQUENCE SEQ_VENDEDORES START WITH 1 INCREMENT BY 1 NOMAXVALUE;


--TABELA GERENTE
CREATE TABLE GERENTES
( 
    COD_EMPRESA INT NOT NULL,
    ID_GER INT  NOT NULL,
    MATRICULA INT NOT NULL,
 	CONSTRAINT FK_GER1 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA),
    CONSTRAINT PK_GER1 PRIMARY KEY (COD_EMPRESA,MATRICULA)
);

-- CRIANDO SEQUENCIA PARA COD DO GERENTE
CREATE SEQUENCE SEQ_GERENTES START WITH 1 INCREMENT BY 1 NOMAXVALUE;

--RELACIONAMENTO GERENTE COM VENDEDOR
CREATE TABLE CANAL_VENDAS_G_V
	(
    COD_EMPRESA INT NOT NULL,
	ID_GER INT NOT NULL,
	ID_VEND INT NOT NULL,
    CONSTRAINT FK_CGV3 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA)
	);

--RELACIONAMENTO VENDEDOR CLIENTE
CREATE TABLE CANAL_VENDAS_V_C
(
    COD_EMPRESA INT NOT NULL,
	ID_VEND INT NOT NULL,
	ID_CLIENTE INT NOT NULL,
	CONSTRAINT FK_CVC2 FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE),
    CONSTRAINT FK_CCV1 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA) 
);
    
    
--CRIACAO DE TABELA PARA REGISTRA META DE VENDAS MES A MES/ANO
CREATE TABLE META_VENDAS
	(
    COD_EMPRESA INT NOT NULL,
	ID_VEND INT NOT NULL,
	ANO VARCHAR2(4) NOT NULL,
	MES VARCHAR2(2) NOT NULL,
	VALOR DECIMAL(10,2),
	CONSTRAINT FK_MV1 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA)
	);
    
    
--FISCAL
--TABELA OPERAÇÕES FISCAIS
CREATE TABLE CFOP
(
	COD_CFOP VARCHAR2(5) NOT NULL PRIMARY KEY,
	DESC_CFOP VARCHAR2(255) NOT NULL
);

--TABELA DE NOTA FISCAL
CREATE TABLE NOTA_FISCAL
(
    COD_EMPRESA INT NOT NULL,
	NUM_NF INT NOT NULL,
	TIP_NF CHAR(1) NOT NULL, --E ENTRADA, S- SAIDA
	COD_CFOP VARCHAR2(5) NOT NULL,
	ID_CLIFOR INT NOT NULL,
	COD_PAGTO INT NOT NULL, 
	DATA_EMISSAO DATE NOT NULL,
	DATA_ENTREGA DATE NOT NULL,
	TOTAL_NF DECIMAL(10,2),
	INTEGRADA_FIN CHAR(1) DEFAULT('N'),
	INTEGRADA_SUP CHAR(1) DEFAULT('N'),
	CONSTRAINT FK_NF1 FOREIGN KEY (COD_CFOP) REFERENCES CFOP(COD_CFOP),
	CONSTRAINT FK_NF2 FOREIGN KEY (COD_PAGTO) REFERENCES COND_PAGTO(COD_PAGTO),
    CONSTRAINT PK_NF1 PRIMARY KEY (COD_EMPRESA,NUM_NF)
);


--TABELA NOTA FISCAL ITENS
CREATE TABLE NOTA_FISCAL_ITENS
(
    COD_EMPRESA INT NOT NULL,
	NUM_NF INT NOT NULL,
	SEQ_MAT INT NOT NULL,
	COD_MAT INT NOT NULL,
	QTD     INT NOT NULL,
	VAL_UNIT DECIMAL(10,2) NOT NULL,
	PED_ORIG  INT NOT NULL,
	CONSTRAINT FK_NFIT1 FOREIGN KEY (COD_EMPRESA,NUM_NF) REFERENCES NOTA_FISCAL(COD_EMPRESA,NUM_NF),
	CONSTRAINT FK_NFIT2 FOREIGN KEY (COD_EMPRESA,COD_MAT) REFERENCES MATERIAL(COD_EMPRESA,COD_MAT)
);

--PARAMETRO NF
CREATE TABLE PARAM_NFE
(
     COD_EMPRESA INT NOT NULL PRIMARY KEY,
     NUM_NFE INT NOT NULL,
     CONSTRAINT FK_NFE1 FOREIGN KEY (COD_EMPRESA) REFERENCES EMPRESA(COD_EMPRESA)
);


--PARAMETRO INSS
CREATE TABLE PARAM_INSS
(
     VIGENCIA_INI DATE,
     VIGENCIA_FIM DATE,
     VALOR_DE DECIMAL(10,2) NOT NULL,
     VALOR_ATE DECIMAL(10,2) NOT NULL,
     PCT DECIMAL(10,2) NOT NULL
 );

--PARAMETRO IMPOSTO
CREATE TABLE PARAM_IRRF
(
     VIGENCIA_INI DATE,
     VIGENCIA_FIM DATE,
     VALOR_DE DECIMAL(10,2) NOT NULL,
     VALOR_ATE DECIMAL(10,2) NOT NULL,
     PCT DECIMAL(10,2) NOT NULL,
     VAL_ISENT DECIMAL(10,2)
 );


--TABELA PARA AUDITORIA DE SALÁRIO
 CREATE TABLE AUDITORIA_SALARIO
 (  
    COD_EMPRESA INT NOT NULL,
	MATRICULA INT NOT NULL,
	SAL_ANTES DECIMAL(10, 2) NOT NULL,
	SAL_DEPOIS DECIMAL(10, 2) NOT NULL,
	USUARIO VARCHAR2(20) NOT NULL,
	DATA_ATUALIZACAO DATE NOT NULL,
    CONSTRAINT FK_AUDIT1 FOREIGN KEY (COD_EMPRESA,MATRICULA) REFERENCES FUNCIONARIO(COD_EMPRESA,MATRICULA)
);


--ALGUNS ALTERS
--ADD CAMPO LOGIN TABELA APONTAMENTOS CRIACAO APOS TABELA USUARIOS E FK
  ALTER TABLE APONTAMENTOS ADD LOGIN VARCHAR2(30)NOT NULL;
 
  ALTER TABLE APONTAMENTOS ADD LOTE VARCHAR2(20) NOT NULL;
  --REMOVENDO CONSTRAINT PARA TESTE
  --ALTER TABLE CONSUMO DROP CONSTRAINT  FK_CONS2;
  --ALTER TABLE APONTAMENTOS DROP CONSTRAINT  FK_APONT3

--ADD CAMPO LOGIN TABELA ESTOQUE_MOV  CRIACAO APOS TABELA USUARIO
  ALTER TABLE ESTOQUE_MOV ADD LOGIN VARCHAR2(30)NOT NULL;
  
 
--ALTERAR  COD_PAGTO TAB PED_COMPRAS PARA FOREIGN KEY APOS TABELA COND_PAGTO
  ALTER TABLE PED_COMPRAS ADD 
  FOREIGN KEY (COD_PAGTO) REFERENCES COND_PAGTO(COD_PAGTO);













